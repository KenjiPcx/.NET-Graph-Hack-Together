@using ProductiGraph.Toast

@inject ProjectService projectService
@inject ToastService ToastService

@page "/projects"

<div class="prose mx-auto">
    <div class="flex justify-between items-center w-full">
        <p class="text-2xl font-bold">Ongoing Projects</p>
        <label for="my-modal-4" class="btn btn-accent btn-sm">New</label>
    </div>
    <div>
        @foreach (var project in projects)
        {
            <div tabindex="0" class="collapse collapse-arrow rounded-2xl bg-base-200 text-center mb-3">
                <input type="checkbox" class="peer" />
                <div class="collapse-title text-lg font-bold">
                    @project.Name
                </div>
                <div class="collapse-content">
                    <p>@project.Description</p>
                    <div class="btn btn-sm btn-error" @onclick="() => DeleteProject(project)">Delete</div>
                </div>
            </div>
        }
    </div>

    <input type="checkbox" id="my-modal-4" class="modal-toggle" />
    <label for="my-modal-4" class="modal cursor-pointer">
        <label class="modal-box relative flex flex-col items-center" for="">
            <h3 class="text-xl font-bold">Add New Project</h3>
            <div class="form-control w-full max-w-xs mb-3">
                <label class="label">
                    <span class="label-text">Project Name</span>
                </label>
                <input type="text" @bind="newProjectName" placeholder="Win in life 😉" class="input input-bordered w-full max-w-xs" />
            </div>
            <div class="form-control w-full max-w-xs mb-3">
                <label class="label">
                    <span class="label-text">Description</span>
                </label>
                <textarea @bind="newProjectDescription" class="textarea textarea-bordered h-24" placeholder="Build some high tech company and reach my exit plan"></textarea>
            </div>
            <div class="flex justify-center">
                <button @onclick="AddProject" class="btn btn-active btn-sm btn-wide btn-secondary my-5">Add Project</button>
            </div>
        </label>
    </label>
</div>

@code {
    private List<Project> projects = new List<Project>();
    private string newProjectName = "";
    private string newProjectDescription = "";

    protected override async Task OnInitializedAsync()
    {
        projects = await projectService.GetProjectsAsync();
    }

    private async Task AddProject()
    {
        if (newProjectName == "" || newProjectDescription == "")
        {
            ToastService.ShowToast("Project needs a name and a description! 🫠", ToastLevel.Error);
            return;
        }

        try
        {
            var newProject = new Project
                {
                    Name = newProjectName,
                    Description = newProjectDescription,
                };
            var project = await projectService.AddProjectAsync(newProject);
            projects.Add(project);
            newProjectName = "";
            newProjectDescription = "";
            ToastService.ShowToast($"Added project {newProject.Name}", ToastLevel.Success);

        }
        catch (Exception ex)
        {
            ToastService.ShowToast($"Failed to add project {newProjectName}, {ex.Message}", ToastLevel.Error);
        }
    }

    private async Task DeleteProject(Project project)
    {
        try
        {
            await projectService.DeleteProjectAsync(project);
            projects.Remove(project);
            ToastService.ShowToast($"Removed project {project.Name}", ToastLevel.Success);
        }
        catch (Exception ex)
        {
            ToastService.ShowToast($"Failed to delete project {project.Name}, {ex.Message}", ToastLevel.Error);
        }
    }
}
